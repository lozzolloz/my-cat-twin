{"ast":null,"code":"var _jsxFileName = \"/Users/lawrenceallen/SchoolOfCode/my cat twin/my-app/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport InputBox from \"./InputBox\";\nimport BigButton from \"./BigButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [inputValue, setInputValue] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [displayData, setDisplayData] = useState([]);\n  async function handleApiCall() {\n    const lowerCaseName = name.toLowerCase();\n    const response = await fetch(`/api/search?name=${encodeURIComponent(lowerCaseName)}`);\n    const data = await response.json();\n    console.log(data);\n    if (data.length > 0) {\n      // If name exists, add +1 to times searched and get the updated data\n      await fetch(`/api/increment?name=${encodeURIComponent(lowerCaseName)}`, {\n        method: \"PUT\"\n      });\n\n      // Get and display updated data\n      const updatedResponse = await fetch(`/api/search?name=${encodeURIComponent(lowerCaseName)}`);\n      const updatedData = await updatedResponse.json();\n      setDisplayData(updatedData);\n    } else {\n      // If name doesn't exist, post it and get the new data\n      await fetch(`/api/add`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          name: lowerCaseName\n        })\n      });\n\n      // Get and set the new data\n      const newDataResponse = await fetch(`/api/search`);\n      const newData = await newDataResponse.json();\n      setDisplayData(newData);\n    }\n  }\n  useEffect(() => {\n    handleApiCall();\n    //clear search field\n  }, [name]);\n  function handleChange(event) {\n    if (event.target.value.length > 255) {\n      event.target.value = \"\";\n    }\n    setInputValue(event.target.value);\n  }\n  function handleClick() {\n    if (inputValue !== \"\") {\n      setName(inputValue);\n    }\n  }\n  useEffect(() => {\n    console.log(inputValue);\n  }, [inputValue]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(InputBox, {\n      handleChange: handleChange,\n      maxLength: \"255\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BigButton, {\n      handleClick: handleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"mx7vq+NWFxCQqL56fTPZDcrg6kQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","InputBox","BigButton","jsxDEV","_jsxDEV","App","_s","inputValue","setInputValue","name","setName","displayData","setDisplayData","handleApiCall","lowerCaseName","toLowerCase","response","fetch","encodeURIComponent","data","json","console","log","length","method","updatedResponse","updatedData","headers","body","JSON","stringify","newDataResponse","newData","handleChange","event","target","value","handleClick","className","children","maxLength","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/lawrenceallen/SchoolOfCode/my cat twin/my-app/frontend/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport InputBox from \"./InputBox\";\nimport BigButton from \"./BigButton\";\n\nfunction App() {\n  const [inputValue, setInputValue] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [displayData, setDisplayData] = useState([]);\n\n  async function handleApiCall() {\n    const lowerCaseName = name.toLowerCase();\n    const response = await fetch(\n      `/api/search?name=${encodeURIComponent(lowerCaseName)}`\n    );\n    const data = await response.json();\n    console.log(data)\n\n    if (data.length > 0) {\n      // If name exists, add +1 to times searched and get the updated data\n      await fetch(`/api/increment?name=${encodeURIComponent(lowerCaseName)}`, {\n        method: \"PUT\",\n      });\n\n      // Get and display updated data\n      const updatedResponse = await fetch(\n        `/api/search?name=${encodeURIComponent(lowerCaseName)}`\n      );\n      const updatedData = await updatedResponse.json();\n      setDisplayData(updatedData);\n    } else {\n      // If name doesn't exist, post it and get the new data\n      await fetch(`/api/add`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ name: lowerCaseName }),\n      });\n\n      // Get and set the new data\n      const newDataResponse = await fetch(`/api/search`);\n      const newData = await newDataResponse.json();\n      setDisplayData(newData);\n    }\n  }\n\n\n\n  useEffect(()=>{\nhandleApiCall()\n//clear search field\n  },[name])\n\n  function handleChange(event) {\n    if (event.target.value.length > 255) {\n      event.target.value = \"\";\n    }\n    setInputValue(event.target.value);\n  }\n\n  function handleClick() {\n    if (inputValue !== \"\") {\n      setName(inputValue);\n    }\n  }\n\n  useEffect(() => {\n    console.log(inputValue);\n  }, [inputValue]);\n\n  return (\n    <div className=\"App\">\n      <InputBox handleChange={handleChange} maxLength=\"255\"></InputBox>\n      <BigButton handleClick={handleClick}></BigButton>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}